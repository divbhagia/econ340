{
  "hash": "2d3eb274a3bda268bf7698e62b12d4f8",
  "result": {
    "markdown": "---\ntitle: \"Problem Set 2\"\noutput: \n  pdf_document:\n    latex_engine: xelatex\nheader-includes:\n  - \"\\\\usepackage[default]{lato}\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n################################################################################\n# Problem Set 2\n################################################################################\n\n# For this problem set, you will analyze and combine the following two \n# state-level datasets:\n# - econ_data.xlsx (Economic data)\n# - nbd_data.csv (Neighborhood data)\n# Variables are described in the problem set description on Canvas. \n\n################################################################################\n\n# Uncomment the commands below to load needed packages\n#library(tidyverse) \n#library(readxl) # Install if not already installed \n\n################################################################################\n# 1. Import both Economic and Neighborhood data into R\n################################################################################\n\n# To import .xlsx files:  mydata <- read_excel(\"filename.xlsx\")\n# To import .csv files:   mydata <- read.csv(\"filename.csv\")\n\n# You need to install and load readxl to use read_excel()\n# Look at the names of the files in the folder and replace filename with those names\n# Replace mydata with more intutive names (eg. econ_data, nbd_data)\n# If you are successful, both datasets will appear under data on the top-right\n\n################################################################################\n# 2. Use either the mean() or summarize() function to find the average median \n#    household income (medHHinc) and the average percentage of the population  \n#    living within half a mile of a park (parks).\n################################################################################\n\n\n\n################################################################################\n# 3. Merge both the datasets based on state names.\n################################################################################\n\n# To merge data: merged_data <- merge(data_name1, data_name2, by=\"unit\")\n\n# Replace unit with the name of the variable used for merging. \n# Replace data_name1 and data_name2 with names you assigned to the datasets\n# while importing\n\n################################################################################\n# 4. Find and remove observations with missing values on the variable poverty \n#    from the merged data\n################################################################################\n\n# If a variable var has missing values, the argument is.na(var) returns TRUE. \n\n# Which states had missing values on poverty? Use filter() and is.na() as follows:\n# merged_data %>% filter(is.na(var)==TRUE)\n\n# To remove missing observations, once again use filter() and is.na()\n\n################################################################################\n# 5. Find the state with the highest poverty rate using the functions filter() \n#    and max().\n################################################################################\n\n# Which state has highest poverty rate?\n\n################################################################################\n# 6. Save your resulting dataset in R format. \n#    (R's native format has extension .rda or .Rdata)\n################################################################################\n\n# save(merged_data, file=\"merged_data.rda\") \n# Check if you did indeed save this data in your folder. \n\n################################################################################\n# 7. Use the mutate() and log() functions to create a new variable called   \n#    log_hhinc that is equal to log of medHHinc. Save this new variable to your  \n#    existing merged data. \n################################################################################\n\n\n################################################################################\n# 8. Create a scatter plot with log_hhinc on the x-axis and fine_partc_mttr on  \n#    the y-axis. Use your favorite color for the points on the plot.\n################################################################################\n\n\n################################################################################\n# 9. Use the mutate() function to create a new variable called high_income   \n#    that takes value 1 whenever medHHinc is above 45,000 and 0 otherwise. \n#    Save this new variable to your existing merged data. \n# Note: Income is reported in 1000s of dollars.\n################################################################################\n\n# How many states are categorized as high income? You can use table() or count().\n\n################################################################################\n# 10. Use the functions group_by() and summarize() to find the average fine \n#     particulate matter for states with high_income=1 and high_income=0.\n################################################################################\n\n\n################################################################################\n\n# Make sure to remove all unnecessary comments, such as hints or notes I've provided, \n# so that your final script for submission only contains the essential commands \n# required for executing tasks and any comments you've added.\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}